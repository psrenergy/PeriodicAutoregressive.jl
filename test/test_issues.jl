module TestIssues

using PeriodicAutoregressive
using Test

function test_issue_40()
    #! format: off
    incremental_inflow = [
        30.00, 35.01, 27.65, 30.61, 29.67, 41.31, 28.91, 42.87, 37.15, 33.72, 36.48, 31.32,
        13.54, 40.67, 28.83, 25.55, 23.84, 27.82, 28.77, 18.82, 18.19, 29.60, 17.74, 26.26,
        18.69,  1.54, 43.04, 28.15, 21.19, 36.64, 42.75, 48.98, 52.35, 36.60, 42.36, 32.09,
        34.30, 20.45,  1.55, 32.95, 33.42, 26.93, 32.64, 29.34, 42.65, 21.40, 31.58, 10.32,
        27.24, 17.44, 22.67, 22.45, 26.36, 34.03, 26.44, 26.00, 29.94, 24.94, 27.03, 29.54,
        25.50, 24.28, 23.57, 34.20, 23.38, 18.71, 13.25, 24.74, 23.30, 34.00, 14.95, 30.42,
        40.81, 35.97, 41.10, 38.70, 21.08, 35.75, 33.08, 25.59, 38.88, 25.07, 29.44, 24.72,
        27.89, 45.72, 31.30, 23.44, 38.12, 30.69, 22.67,  8.33, 44.12, 42.61, 38.83, 32.04,
        38.08, 30.58, 17.12, 17.56, 18.94, 35.99, 28.64, 23.74, 24.81, 33.10, 26.90, 38.52,
        38.15, 34.93, 25.18, 31.36, 34.90, 29.26, 30.39, 13.22, 29.26, 44.35, 27.36, 32.91,
        35.58, 26.80, 44.20, 25.46, 34.35, 36.83, 43.17, 18.32, 37.40, 31.57, 27.33, 19.58,
        37.18, 28.30, 15.34, 13.43, 21.21, 19.11, 33.04, 33.51, 20.92, 24.37, 20.98, 46.88,
        40.67, 29.74, 15.36, 14.72, 28.47, 25.77,  9.31,  2.17, 18.15, 39.65, 30.78, 39.25,
        31.91, 34.24, 18.64, 40.29, 23.32, 14.80, 52.08, 29.35, 34.28, 28.73, 42.11, 26.90,
        26.90, 35.34, 34.72, 37.57, 26.48, 25.65, 54.18, 25.89, 28.19, 33.22, 14.22, 40.36,
        45.24, 45.11, 32.14, 40.32, 29.62, 12.94, 32.78, 23.47, 31.63, 40.90, 53.30, 34.42,
        38.06, 36.42, 14.28, 23.23, 36.06, 21.14, 33.08, 27.80, 35.34, 40.66, 32.08, 34.41,
        31.43, 27.80, 24.73, 15.75, 26.58, 30.07, 24.69, 22.13, 11.16, 36.73, 26.74, 28.60,
        25.72, 28.12, 35.99, 30.26, 30.68, 20.22, 21.66, 40.20, 16.66, 24.91, 35.30, 37.94,
        15.77, 23.37, 43.01, 19.16, 14.59, 36.21, 36.60, 38.68, 25.32, 17.68, 29.44, 44.54,
        51.67, 32.27, 34.47, 35.85, 31.74, 26.77, 27.27, 21.13, 39.12, 22.19, 11.98, 12.94,
        29.13, 20.64, 14.78, 21.32, 50.28, 40.22, 13.79, 14.23, 33.33, 28.47, 33.75, 44.34,
        45.07, 52.03, 42.66, 43.20, 32.88, 47.33, 37.12, 44.26, 40.20, 37.55, 35.99, 20.10,
        27.48, 30.47, 18.83, 33.74, 49.21, 34.58, 17.47, 30.12, 30.78, 61.15, 37.30, 20.35,
        19.18, 39.62, 38.86, 38.70, 38.83, 46.23, 51.63, 41.56, 46.87, 19.81, 31.35, 28.69,
        27.79, 21.02, 36.12, 33.25, 19.31, 31.10, 44.99, 26.34, 32.50, 24.75, 39.90, 32.65,
        18.63, 26.59, 44.66, 28.05, 42.26, 43.04, 24.01, 31.08, 32.63, 31.92, 14.60, 23.42,
        30.32, 37.63, 12.08, 45.20, 32.63, 32.55, 27.74, 21.85, 33.89, 22.97, 10.48, 27.97,
        11.19, 33.93, 35.75, 34.15, 27.49, 11.30, 19.01, 15.11, 36.40, 20.66, 21.74, 30.85,
        33.26, 34.69, 52.78, 27.93, 27.90, 25.96, 17.71, 32.96, 31.22, 23.00, 34.49, 22.65,
        26.49, 47.94, 18.50, 28.97, 39.03, 44.01, 27.31, 28.81, 11.04, 10.61, 30.02, 35.91,
        42.37, 41.41, 49.34, 35.78, 25.06, 43.19, 37.55, 14.96, 15.23, 37.53, 12.49, 14.92,
        22.04, 26.81, 40.86, 35.69, 24.93, 46.04, 18.03, 39.87, 30.72, 53.22, 24.15, 29.57,
        12.15, 17.21, 27.23, 16.46, 38.92, 24.63, 31.30, 24.83, 33.14, 35.59, 31.59, 32.43,
        24.28, 15.73, 29.18, 17.21, 26.39, 21.12, 24.94, 19.37, 24.46, 32.72, 27.47, 28.17,
        24.19, 32.77, 48.25, 47.72, 35.15, 25.67, 14.66, 11.80, 38.84, 24.07, 26.69, 20.17,
        28.89, 32.23, 48.67, 38.95, 45.05, 21.00, 37.22,  1.92, 19.97, 23.30, 39.99, 47.54,
        26.24, 20.44, 14.99,  8.16, 25.35, 39.61, 10.12, 22.68, 25.31, 33.30, 31.73, 21.32,
        40.03, 38.37, 23.73, 26.07, 33.38, 26.80, 20.69, 26.74, 28.42, 35.73, 28.78, 34.21,
        28.07, 27.19, 31.47, 38.09, 26.89, 28.28, 43.99, 29.17, 48.77, 42.51, 34.25, 41.90,
    ]
    #! format: on

    number_of_stages_in_year = 12
    P = 0

    parp_models = PARp(
        incremental_inflow,
        number_of_stages_in_year,
        P,
    )

    fit_par!(parp_models)

    return nothing
end

function runtests()
    Base.GC.gc()
    Base.GC.gc()
    for name in names(@__MODULE__; all = true)
        if startswith("$name", "test_")
            @testset "$(name)" begin
                getfield(@__MODULE__, name)()
            end
        end
    end
end

TestIssues.runtests()

end
